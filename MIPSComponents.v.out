#! /c/iverilog/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_00F92D18 .scope module, "ALU" "ALU" 2 28;
 .timescale 0 0;
P_00F97FC4 .param/l "DATA_WIDTH" 2 29, +C4<0100000>;
L_00FA1828 .functor BUFZ 1, L_00F9FEE0, C4<0>, C4<0>, C4<0>;
v00F9F820_0 .net *"_s13", 0 0, L_00F9FB38; 1 drivers
v00F9F248_0 .net *"_s23", 0 0, L_00FA1828; 1 drivers
v00F9F038_0 .net *"_s3", 0 0, L_00F9FD48; 1 drivers
v00F9EE28_0 .net *"_s6", 32 0, C4<000000000000000000000000000000000>; 1 drivers
v00F9EE80_0 .net *"_s8", 0 0, L_00F9FA88; 1 drivers
v00F9F8D0_0 .net "a", 31 0, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>; 0 drivers
v00F9F878_0 .net "b", 31 0, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>; 0 drivers
v00F9F1F0_0 .net "control", 4 0, C4<zzzzz>; 0 drivers
v00F9EED8_0 .var "out", 31 0;
v00F9EF30_0 .net "overflow_wire", 0 0, L_00F9FEE0; 1 drivers
v00F9F090_0 .var "result", 32 0;
v00F9F0E8_0 .net "statusIn", 3 0, C4<zzzz>; 0 drivers
RS_00FA5304 .resolv tri, L_00F9F9D8, L_00F9FB90, L_00F9FAE0, L_00F9FF38;
v00F9F5B8_0 .net8 "statusOut", 3 0, RS_00FA5304; 4 drivers
E_00F97DE0 .event edge, v00F9F0E8_0, v00F9F878_0, v00F9F8D0_0, v00F95D70_0;
L_00F9F9D8 .part/pv L_00F9FD48, 0, 1, 4;
L_00F9FD48 .part v00F9F090_0, 32, 1;
L_00F9FB90 .part/pv L_00F9FA88, 1, 1, 4;
L_00F9FA88 .cmp/eq 33, v00F9F090_0, C4<000000000000000000000000000000000>;
L_00F9FAE0 .part/pv L_00F9FB38, 2, 1, 4;
L_00F9FB38 .part v00F9F090_0, 31, 1;
L_00F9FE30 .part C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>, 31, 1;
L_00FA0300 .part C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>, 31, 1;
L_00FA0148 .part v00F9F090_0, 31, 1;
L_00F9FF38 .part/pv L_00FA1828, 3, 1, 4;
S_00F92DA0 .scope module, "f" "overflow" 2 78, 2 84, S_00F92D18;
 .timescale 0 0;
L_00FA1028 .functor OR 1, L_00F9FF90, L_00FA0568, C4<0>, C4<0>;
L_00FA1060 .functor NOT 1, L_00F9FE30, C4<0>, C4<0>, C4<0>;
L_00FA1098 .functor NOT 1, L_00FA0300, C4<0>, C4<0>, C4<0>;
L_00FA10D0 .functor AND 1, L_00FA1060, L_00FA1098, C4<1>, C4<1>;
L_00FA11B0 .functor AND 1, L_00FA10D0, L_00FA0148, C4<1>, C4<1>;
L_00FA0EA0 .functor AND 1, L_00F9FE30, L_00FA0300, C4<1>, C4<1>;
L_00FA1710 .functor NOT 1, L_00FA0148, C4<0>, C4<0>, C4<0>;
L_00FA1240 .functor AND 1, L_00FA0EA0, L_00FA1710, C4<1>, C4<1>;
L_00FA1438 .functor OR 1, L_00FA11B0, L_00FA1240, C4<0>, C4<0>;
v00F95D70_0 .alias "ALU_CNTRL", 4 0, v00F9F1F0_0;
v00F95DC8_0 .net *"_s0", 5 0, L_00F9FBE8; 1 drivers
v00F95A00_0 .net *"_s11", 0 0, C4<0>; 1 drivers
v00F95E20_0 .net *"_s12", 5 0, C4<001010>; 1 drivers
v00F95A58_0 .net *"_s14", 0 0, L_00FA0568; 1 drivers
v00F95F28_0 .net *"_s16", 0 0, L_00FA1028; 1 drivers
v00F95F80_0 .net *"_s18", 0 0, L_00FA1060; 1 drivers
v00F95B08_0 .net *"_s20", 0 0, L_00FA1098; 1 drivers
v00F95AB0_0 .net *"_s22", 0 0, L_00FA10D0; 1 drivers
v00F95950_0 .net *"_s24", 0 0, L_00FA11B0; 1 drivers
v00F95FD8_0 .net *"_s26", 0 0, L_00FA0EA0; 1 drivers
v00F958A0_0 .net *"_s28", 0 0, L_00FA1710; 1 drivers
v00F958F8_0 .net *"_s3", 0 0, C4<0>; 1 drivers
v00F9F718_0 .net *"_s30", 0 0, L_00FA1240; 1 drivers
v00F9EFE0_0 .net *"_s32", 0 0, L_00FA1438; 1 drivers
v00F9F610_0 .net *"_s34", 0 0, C4<0>; 1 drivers
v00F9F770_0 .net *"_s4", 5 0, C4<000010>; 1 drivers
v00F9EF88_0 .net *"_s6", 0 0, L_00F9FF90; 1 drivers
v00F9F7C8_0 .net *"_s8", 5 0, L_00F9FFE8; 1 drivers
v00F9F668_0 .net "a", 0 0, L_00F9FE30; 1 drivers
v00F9F140_0 .net "b", 0 0, L_00FA0300; 1 drivers
v00F9F198_0 .alias "overflow", 0 0, v00F9EF30_0;
v00F9F6C0_0 .net "result", 0 0, L_00FA0148; 1 drivers
L_00F9FBE8 .concat [ 5 1 0 0], C4<zzzzz>, C4<0>;
L_00F9FF90 .cmp/eq 6, L_00F9FBE8, C4<000010>;
L_00F9FFE8 .concat [ 5 1 0 0], C4<zzzzz>, C4<0>;
L_00FA0568 .cmp/eq 6, L_00F9FFE8, C4<001010>;
L_00F9FEE0 .functor MUXZ 1, C4<0>, L_00FA1438, L_00FA1028, C4<>;
S_00F92388 .scope module, "Register" "Register" 2 93;
 .timescale 0 0;
P_00F981C4 .param/l "DATA_WIDTH" 2 94, +C4<0100000>;
v00F9F2A0_0 .net "D", 31 0, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>; 0 drivers
v00F9F2F8_0 .var "Q", 31 0;
v00F9F350_0 .net "clock", 0 0, C4<z>; 0 drivers
E_00F980C0 .event posedge, v00F9F350_0;
S_00F92740 .scope module, "RegisterFile" "RegisterFile" 2 108;
 .timescale 0 0;
P_0116D7FC .param/l "ADDRESS_WIDTH" 2 109, +C4<0101>;
P_0116D810 .param/l "DATA_WIDTH" 2 109, +C4<0100000>;
L_00FA14E0 .functor BUFZ 32, L_00FA0040, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_00FA1630 .functor BUFZ 32, L_00FA0670, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v00F9F3A8_0 .net *"_s0", 31 0, L_00FA0040; 1 drivers
v00F9F400_0 .net *"_s4", 31 0, L_00FA0670; 1 drivers
v00F9F458_0 .net "address1", 4 0, C4<zzzzz>; 0 drivers
v00F9F560_0 .net "address2", 4 0, C4<zzzzz>; 0 drivers
v00F9F4B0_0 .net "clock", 0 0, C4<z>; 0 drivers
v00F9F508 .array "data", 0 32, 31 0;
v00F9FC40_0 .net "outData1", 31 0, L_00FA14E0; 1 drivers
v00F9FC98_0 .net "outData2", 31 0, L_00FA1630; 1 drivers
v00F9FCF0_0 .net "regWrite", 0 0, C4<z>; 0 drivers
v00F9F980_0 .net "writeAddress", 4 0, C4<zzzzz>; 0 drivers
v00F9FDA0_0 .net "writeData", 31 0, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>; 0 drivers
E_00F98080 .event posedge, v00F9F4B0_0;
L_00FA0040 .array/port v00F9F508, C4<zzzzz>;
L_00FA0670 .array/port v00F9F508, C4<zzzzz>;
S_00F92EB0 .scope module, "SignExtend" "SignExtend" 2 131;
 .timescale 0 0;
P_01164F8C .param/l "FROM_WIDTH" 2 132, +C4<010000>;
P_01164FA0 .param/l "TO_WIDTH" 2 132, +C4<0100000>;
v00F9F928_0 .net "extended", 31 0, L_00FA0098; 1 drivers
v00F9FA30_0 .net "unextended", 15 0, C4<zzzzzzzzzzzzzzzz>; 0 drivers
L_00FA0098 .extend/s 32, C4<zzzzzzzzzzzzzzzz>;
    .scope S_00F92D18;
T_0 ;
    %wait E_00F97DE0;
    %load/v 8, v00F9F1F0_0, 5;
    %cmpi/u 8, 0, 5;
    %jmp/1 T_0.0, 6;
    %cmpi/u 8, 1, 5;
    %jmp/1 T_0.1, 6;
    %cmpi/u 8, 2, 5;
    %jmp/1 T_0.2, 6;
    %cmpi/u 8, 10, 5;
    %jmp/1 T_0.3, 6;
    %cmpi/u 8, 11, 5;
    %jmp/1 T_0.4, 6;
    %cmpi/u 8, 24, 5;
    %jmp/1 T_0.5, 6;
    %movi 8, 1, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v00F9EED8_0, 0, 8;
    %jmp T_0.7;
T_0.0 ;
    %load/v 8, v00F9F8D0_0, 32;
    %mov 40, 0, 1;
    %load/v 41, v00F9F878_0, 32;
    %mov 73, 0, 1;
    %and 8, 41, 33;
    %set/v v00F9F090_0, 8, 33;
    %load/v 8, v00F9F090_0, 32; Only need 32 of 33 bits
; Save base=8 wid=32 in lookaside.
    %set/v v00F9EED8_0, 8, 32;
    %jmp T_0.7;
T_0.1 ;
    %load/v 8, v00F9F8D0_0, 32;
    %mov 40, 0, 1;
    %load/v 41, v00F9F878_0, 32;
    %mov 73, 0, 1;
    %or 8, 41, 33;
    %ix/load 0, 33, 0;
    %assign/v0 v00F9F090_0, 0, 8;
    %load/v 8, v00F9F090_0, 32; Only need 32 of 33 bits
; Save base=8 wid=32 in lookaside.
    %set/v v00F9EED8_0, 8, 32;
    %jmp T_0.7;
T_0.2 ;
    %load/v 8, v00F9F8D0_0, 32;
    %mov 40, 0, 1;
    %load/v 41, v00F9F878_0, 32;
    %mov 73, 0, 1;
    %add 8, 41, 33;
    %load/v 41, v00F9F0E8_0, 1; Select 1 out of 4 bits
    %mov 42, 0, 32;
    %add 8, 41, 33;
    %set/v v00F9F090_0, 8, 33;
    %load/v 8, v00F9F090_0, 32; Only need 32 of 33 bits
; Save base=8 wid=32 in lookaside.
    %set/v v00F9EED8_0, 8, 32;
    %jmp T_0.7;
T_0.3 ;
    %load/v 8, v00F9F8D0_0, 32;
    %mov 40, 0, 1;
    %load/v 41, v00F9F878_0, 32;
    %mov 73, 0, 1;
    %sub 8, 41, 33;
    %set/v v00F9F090_0, 8, 33;
    %load/v 8, v00F9F090_0, 32; Only need 32 of 33 bits
; Save base=8 wid=32 in lookaside.
    %set/v v00F9EED8_0, 8, 32;
    %jmp T_0.7;
T_0.4 ;
    %load/v 8, v00F9F8D0_0, 32;
    %load/v 40, v00F9F878_0, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_0.8, 8;
    %movi 9, 1, 33;
    %jmp/1  T_0.10, 8;
T_0.8 ; End of true expr.
    %jmp/0  T_0.9, 8;
 ; End of false expr.
    %blend  9, 0, 33; Condition unknown.
    %jmp  T_0.10;
T_0.9 ;
    %mov 9, 0, 33; Return false value
T_0.10 ;
    %set/v v00F9F090_0, 9, 33;
    %load/v 8, v00F9F090_0, 32; Only need 32 of 33 bits
; Save base=8 wid=32 in lookaside.
    %set/v v00F9EED8_0, 8, 32;
    %jmp T_0.7;
T_0.5 ;
    %load/v 41, v00F9F8D0_0, 32;
    %load/v 73, v00F9F878_0, 32;
    %or 41, 73, 32;
    %nor/r 41, 41, 32;
    %mov 8, 41, 1;
    %mov 9, 0, 32;
    %set/v v00F9F090_0, 8, 33;
    %load/v 8, v00F9F090_0, 32; Only need 32 of 33 bits
; Save base=8 wid=32 in lookaside.
    %set/v v00F9EED8_0, 8, 32;
    %jmp T_0.7;
T_0.7 ;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_00F92388;
T_1 ;
    %wait E_00F980C0;
    %load/v 8, v00F9F2A0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v00F9F2F8_0, 0, 8;
    %jmp T_1;
    .thread T_1;
    .scope S_00F92740;
T_2 ;
    %wait E_00F98080;
    %load/v 8, v00F9FCF0_0, 1;
    %jmp/0xz  T_2.0, 8;
    %load/v 8, v00F9FDA0_0, 32;
    %ix/getv 3, v00F9F980_0;
    %jmp/1 t_0, 4;
    %ix/load 0, 32, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v00F9F508, 0, 8;
t_0 ;
T_2.0 ;
    %jmp T_2;
    .thread T_2;
# The file index is used to find the file name in the following table.
:file_names 3;
    "N/A";
    "<interactive>";
    "MIPSComponents.v";
