#! /c/iverilog/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_00812570 .scope module, "ALU_tb" "ALU_tb" 2 4;
 .timescale 0 0;
v008215D8_0 .var "a", 31 0;
v00821210_0 .var "b", 31 0;
v008213C8_0 .var "control", 4 0;
v00820F50_0 .net "out", 31 0, v008212C0_0; 1 drivers
v00821630_0 .var "si", 3 0;
RS_0082A2F4 .resolv tri, L_00859438, L_008590C8, L_00859490, L_008596A0;
v00821738_0 .net8 "so", 3 0, RS_0082A2F4; 4 drivers
S_00812AC0 .scope module, "alu" "ALU" 2 11, 3 28, S_00812570;
 .timescale 0 0;
P_00818D14 .param/l "DATA_WIDTH" 3 29, +C4<0100000>;
L_0085A2B0 .functor BUFZ 1, L_00858E60, C4<0>, C4<0>, C4<0>;
v00821528_0 .net *"_s13", 0 0, L_00858DB0; 1 drivers
v00821478_0 .net *"_s23", 0 0, L_0085A2B0; 1 drivers
v00821268_0 .net *"_s3", 0 0, L_00859178; 1 drivers
v00821058_0 .net *"_s6", 32 0, C4<000000000000000000000000000000000>; 1 drivers
v00821108_0 .net *"_s8", 0 0, L_00858EB8; 1 drivers
v008214D0_0 .net "a", 31 0, v008215D8_0; 1 drivers
v008219A0_0 .net "b", 31 0, v00821210_0; 1 drivers
v008210B0_0 .net "control", 4 0, v008213C8_0; 1 drivers
v008212C0_0 .var "out", 31 0;
v00821318_0 .net "overflow_wire", 0 0, L_00858E60; 1 drivers
v008211B8_0 .var "result", 32 0;
v008219F8_0 .net "statusIn", 3 0, v00821630_0; 1 drivers
v00821370_0 .alias "statusOut", 3 0, v00821738_0;
E_00818D30 .event edge, v008219F8_0, v008219A0_0, v008214D0_0, v008143E8_0;
L_00859438 .part/pv L_00859178, 0, 1, 4;
L_00859178 .part v008211B8_0, 32, 1;
L_008590C8 .part/pv L_00858EB8, 1, 1, 4;
L_00858EB8 .cmp/eq 33, v008211B8_0, C4<000000000000000000000000000000000>;
L_00859490 .part/pv L_00858DB0, 2, 1, 4;
L_00858DB0 .part v008211B8_0, 31, 1;
L_008595F0 .part v008215D8_0, 31, 1;
L_008594E8 .part v00821210_0, 31, 1;
L_008596F8 .part v008211B8_0, 31, 1;
L_008596A0 .part/pv L_0085A2B0, 3, 1, 4;
S_00812818 .scope module, "f" "overflow" 3 78, 3 84, S_00812AC0;
 .timescale 0 0;
L_0085A1D0 .functor OR 1, L_00859648, L_00859540, C4<0>, C4<0>;
L_0085A208 .functor NOT 1, L_008595F0, C4<0>, C4<0>, C4<0>;
L_00859DE0 .functor NOT 1, L_008594E8, C4<0>, C4<0>, C4<0>;
L_00859E88 .functor AND 1, L_0085A208, L_00859DE0, C4<1>, C4<1>;
L_0085A160 .functor AND 1, L_00859E88, L_008596F8, C4<1>, C4<1>;
L_00859F30 .functor AND 1, L_008595F0, L_008594E8, C4<1>, C4<1>;
L_00859FA0 .functor NOT 1, L_008596F8, C4<0>, C4<0>, C4<0>;
L_0085A198 .functor AND 1, L_00859F30, L_00859FA0, C4<1>, C4<1>;
L_0085A048 .functor OR 1, L_0085A160, L_0085A198, C4<0>, C4<0>;
v008143E8_0 .alias "ALU_CNTRL", 4 0, v008210B0_0;
v00814180_0 .net *"_s0", 5 0, L_00858D58; 1 drivers
v00814758_0 .net *"_s11", 0 0, C4<0>; 1 drivers
v00814650_0 .net *"_s12", 5 0, C4<001010>; 1 drivers
v008145F8_0 .net *"_s14", 0 0, L_00859540; 1 drivers
v008146A8_0 .net *"_s16", 0 0, L_0085A1D0; 1 drivers
v008147B0_0 .net *"_s18", 0 0, L_0085A208; 1 drivers
v00814288_0 .net *"_s20", 0 0, L_00859DE0; 1 drivers
v008141D8_0 .net *"_s22", 0 0, L_00859E88; 1 drivers
v00814230_0 .net *"_s24", 0 0, L_0085A160; 1 drivers
v008142E0_0 .net *"_s26", 0 0, L_00859F30; 1 drivers
v00814440_0 .net *"_s28", 0 0, L_00859FA0; 1 drivers
v00821688_0 .net *"_s3", 0 0, C4<0>; 1 drivers
v00821840_0 .net *"_s30", 0 0, L_0085A198; 1 drivers
v008217E8_0 .net *"_s32", 0 0, L_0085A048; 1 drivers
v00821420_0 .net *"_s34", 0 0, C4<0>; 1 drivers
v00821948_0 .net *"_s4", 5 0, C4<000010>; 1 drivers
v00821160_0 .net *"_s6", 0 0, L_00859648; 1 drivers
v00821580_0 .net *"_s8", 5 0, L_00858FC0; 1 drivers
v00821790_0 .net "a", 0 0, L_008595F0; 1 drivers
v00821898_0 .net "b", 0 0, L_008594E8; 1 drivers
v00820FA8_0 .alias "overflow", 0 0, v00821318_0;
v008218F0_0 .net "result", 0 0, L_008596F8; 1 drivers
L_00858D58 .concat [ 5 1 0 0], v008213C8_0, C4<0>;
L_00859648 .cmp/eq 6, L_00858D58, C4<000010>;
L_00858FC0 .concat [ 5 1 0 0], v008213C8_0, C4<0>;
L_00859540 .cmp/eq 6, L_00858FC0, C4<001010>;
L_00858E60 .functor MUXZ 1, C4<0>, L_0085A048, L_0085A1D0, C4<>;
S_00812708 .scope module, "Register" "Register" 3 93;
 .timescale 0 0;
P_00818E74 .param/l "DATA_WIDTH" 3 94, +C4<0100000>;
v008216E0_0 .net "D", 31 0, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>; 0 drivers
v00821000_0 .var "Q", 31 0;
v00821AA8_0 .net "clock", 0 0, C4<z>; 0 drivers
E_00819370 .event posedge, v00821AA8_0;
S_00812790 .scope module, "RegisterFile" "RegisterFile" 3 108;
 .timescale 0 0;
P_0082773C .param/l "ADDRESS_WIDTH" 3 109, +C4<0101>;
P_00827750 .param/l "DATA_WIDTH" 3 109, +C4<0100000>;
L_0085BA18 .functor BUFZ 32, L_00859280, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0085BAC0 .functor BUFZ 32, L_00858E08, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v00821C60_0 .net *"_s0", 31 0, L_00859280; 1 drivers
v00821E18_0 .net *"_s4", 31 0, L_00858E08; 1 drivers
v00821C08_0 .net "address1", 4 0, C4<zzzzz>; 0 drivers
v00821D10_0 .net "address2", 4 0, C4<zzzzz>; 0 drivers
v00821B58_0 .net "clock", 0 0, C4<z>; 0 drivers
v00821CB8 .array "data", 0 32, 31 0;
v00821E70_0 .net "outData1", 31 0, L_0085BA18; 1 drivers
v00821B00_0 .net "outData2", 31 0, L_0085BAC0; 1 drivers
v00821D68_0 .net "regWrite", 0 0, C4<z>; 0 drivers
v00821DC0_0 .net "writeAddress", 4 0, C4<zzzzz>; 0 drivers
v00821EC8_0 .net "writeData", 31 0, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>; 0 drivers
E_00819390 .event posedge, v00821B58_0;
L_00859280 .array/port v00821CB8, C4<zzzzz>;
L_00858E08 .array/port v00821CB8, C4<zzzzz>;
S_00812B48 .scope module, "SignExtend" "SignExtend" 3 131;
 .timescale 0 0;
P_0082788C .param/l "FROM_WIDTH" 3 132, +C4<010000>;
P_008278A0 .param/l "TO_WIDTH" 3 132, +C4<0100000>;
v00821A50_0 .net "extended", 31 0, L_00859018; 1 drivers
v00821BB0_0 .net "unextended", 15 0, C4<zzzzzzzzzzzzzzzz>; 0 drivers
L_00859018 .extend/s 32, C4<zzzzzzzzzzzzzzzz>;
    .scope S_00812AC0;
T_0 ;
    %wait E_00818D30;
    %load/v 8, v008210B0_0, 5;
    %cmpi/u 8, 0, 5;
    %jmp/1 T_0.0, 6;
    %cmpi/u 8, 1, 5;
    %jmp/1 T_0.1, 6;
    %cmpi/u 8, 2, 5;
    %jmp/1 T_0.2, 6;
    %cmpi/u 8, 10, 5;
    %jmp/1 T_0.3, 6;
    %cmpi/u 8, 11, 5;
    %jmp/1 T_0.4, 6;
    %cmpi/u 8, 24, 5;
    %jmp/1 T_0.5, 6;
    %movi 8, 1, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v008212C0_0, 0, 8;
    %jmp T_0.7;
T_0.0 ;
    %load/v 8, v008214D0_0, 32;
    %mov 40, 0, 1;
    %load/v 41, v008219A0_0, 32;
    %mov 73, 0, 1;
    %and 8, 41, 33;
    %set/v v008211B8_0, 8, 33;
    %load/v 8, v008211B8_0, 32; Only need 32 of 33 bits
; Save base=8 wid=32 in lookaside.
    %set/v v008212C0_0, 8, 32;
    %jmp T_0.7;
T_0.1 ;
    %load/v 8, v008214D0_0, 32;
    %mov 40, 0, 1;
    %load/v 41, v008219A0_0, 32;
    %mov 73, 0, 1;
    %or 8, 41, 33;
    %ix/load 0, 33, 0;
    %assign/v0 v008211B8_0, 0, 8;
    %load/v 8, v008211B8_0, 32; Only need 32 of 33 bits
; Save base=8 wid=32 in lookaside.
    %set/v v008212C0_0, 8, 32;
    %jmp T_0.7;
T_0.2 ;
    %load/v 8, v008214D0_0, 32;
    %mov 40, 0, 1;
    %load/v 41, v008219A0_0, 32;
    %mov 73, 0, 1;
    %add 8, 41, 33;
    %load/v 41, v008219F8_0, 1; Select 1 out of 4 bits
    %mov 42, 0, 32;
    %add 8, 41, 33;
    %set/v v008211B8_0, 8, 33;
    %load/v 8, v008211B8_0, 32; Only need 32 of 33 bits
; Save base=8 wid=32 in lookaside.
    %set/v v008212C0_0, 8, 32;
    %jmp T_0.7;
T_0.3 ;
    %load/v 8, v008214D0_0, 32;
    %mov 40, 0, 1;
    %load/v 41, v008219A0_0, 32;
    %mov 73, 0, 1;
    %sub 8, 41, 33;
    %set/v v008211B8_0, 8, 33;
    %load/v 8, v008211B8_0, 32; Only need 32 of 33 bits
; Save base=8 wid=32 in lookaside.
    %set/v v008212C0_0, 8, 32;
    %jmp T_0.7;
T_0.4 ;
    %load/v 8, v008214D0_0, 32;
    %load/v 40, v008219A0_0, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_0.8, 8;
    %movi 9, 1, 33;
    %jmp/1  T_0.10, 8;
T_0.8 ; End of true expr.
    %jmp/0  T_0.9, 8;
 ; End of false expr.
    %blend  9, 0, 33; Condition unknown.
    %jmp  T_0.10;
T_0.9 ;
    %mov 9, 0, 33; Return false value
T_0.10 ;
    %set/v v008211B8_0, 9, 33;
    %load/v 8, v008211B8_0, 32; Only need 32 of 33 bits
; Save base=8 wid=32 in lookaside.
    %set/v v008212C0_0, 8, 32;
    %jmp T_0.7;
T_0.5 ;
    %load/v 41, v008214D0_0, 32;
    %load/v 73, v008219A0_0, 32;
    %or 41, 73, 32;
    %nor/r 41, 41, 32;
    %mov 8, 41, 1;
    %mov 9, 0, 32;
    %set/v v008211B8_0, 8, 33;
    %load/v 8, v008211B8_0, 32; Only need 32 of 33 bits
; Save base=8 wid=32 in lookaside.
    %set/v v008212C0_0, 8, 32;
    %jmp T_0.7;
T_0.7 ;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_00812570;
T_1 ;
    %set/v v008213C8_0, 0, 5;
    %movi 8, 4026531855, 32;
    %set/v v008215D8_0, 8, 32;
    %movi 8, 4026532080, 32;
    %set/v v00821210_0, 8, 32;
    %set/v v00821630_0, 0, 4;
    %delay 20, 0;
    %vpi_call 2 19 "$display", "%0h & %0h = %0h; V=%0b, N=%0b, Z=%0b, C=%0b", v008215D8_0, v00821210_0, v00820F50_0, &PV<v00821738_0, 3, 1>, &PV<v00821738_0, 2, 1>, &PV<v00821738_0, 1, 1>, &PV<v00821738_0, 0, 1>;
    %movi 8, 1, 5;
    %set/v v008213C8_0, 8, 5;
    %delay 20, 0;
    %vpi_call 2 23 "$display", "%0h | %0h = %0h; V=%0b, N=%0b, Z=%0b, C=%0b", v008215D8_0, v00821210_0, v00820F50_0, &PV<v00821738_0, 3, 1>, &PV<v00821738_0, 2, 1>, &PV<v00821738_0, 1, 1>, &PV<v00821738_0, 0, 1>;
    %movi 8, 24, 5;
    %set/v v008213C8_0, 8, 5;
    %delay 20, 0;
    %vpi_call 2 27 "$display", "!(%0h | %0h) = %0h; V=%0b, N=%0b, Z=%0b, C=%0b", v008215D8_0, v00821210_0, v00820F50_0, &PV<v00821738_0, 3, 1>, &PV<v00821738_0, 2, 1>, &PV<v00821738_0, 1, 1>, &PV<v00821738_0, 0, 1>;
    %movi 8, 2, 5;
    %set/v v008213C8_0, 8, 5;
    %movi 8, 2147483647, 32;
    %set/v v008215D8_0, 8, 32;
    %movi 8, 1, 32;
    %set/v v00821210_0, 8, 32;
    %delay 20, 0;
    %vpi_call 2 33 "$display", "%0h + %0h = %0h; V=%0b, N=%0b, Z=%0b, C=%0b", v008215D8_0, v00821210_0, v00820F50_0, &PV<v00821738_0, 3, 1>, &PV<v00821738_0, 2, 1>, &PV<v00821738_0, 1, 1>, &PV<v00821738_0, 0, 1>;
    %movi 8, 2748, 32;
    %set/v v008215D8_0, 8, 32;
    %movi 8, 291, 32;
    %set/v v00821210_0, 8, 32;
    %ix/load 0, 0, 0;
    %set/x0 v00821630_0, 1, 1;
    %delay 20, 0;
    %vpi_call 2 39 "$display", "%0h + %0h + 1 = %0h; V=%0b, N=%0b, Z=%0b, C=%0b", v008215D8_0, v00821210_0, v00820F50_0, &PV<v00821738_0, 3, 1>, &PV<v00821738_0, 2, 1>, &PV<v00821738_0, 1, 1>, &PV<v00821738_0, 0, 1>;
    %movi 8, 10, 5;
    %set/v v008213C8_0, 8, 5;
    %delay 20, 0;
    %vpi_call 2 43 "$display", "%0h - %0h = %0h; V=%0b, N=%0b, Z=%0b, C=%0b", v008215D8_0, v00821210_0, v00820F50_0, &PV<v00821738_0, 3, 1>, &PV<v00821738_0, 2, 1>, &PV<v00821738_0, 1, 1>, &PV<v00821738_0, 0, 1>;
    %end;
    .thread T_1;
    .scope S_00812708;
T_2 ;
    %wait E_00819370;
    %load/v 8, v008216E0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v00821000_0, 0, 8;
    %jmp T_2;
    .thread T_2;
    .scope S_00812790;
T_3 ;
    %wait E_00819390;
    %load/v 8, v00821D68_0, 1;
    %jmp/0xz  T_3.0, 8;
    %load/v 8, v00821EC8_0, 32;
    %ix/getv 3, v00821DC0_0;
    %jmp/1 t_0, 4;
    %ix/load 0, 32, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v00821CB8, 0, 8;
t_0 ;
T_3.0 ;
    %jmp T_3;
    .thread T_3;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "MIPSComponents_ALU_tb.v";
    "./MIPSComponents.v";
